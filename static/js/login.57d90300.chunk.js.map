{"version":3,"sources":["views/login/index.tsx"],"names":["Login","props","timerId","doLoading","setState","loading","onFinish","values","console","log","auth","username","localStorage","setItem","JSON","stringify","setTimeout","message","success","history","push","state","notification","open","duration","description","destroy","this","clearTimeout","className","name","initialValues","remember","Item","rules","required","prefix","placeholder","type","valuePropName","noStyle","href","htmlType","Component","withRouter"],"mappings":"4SAiBMA,G,yDASJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAHRC,QAAe,EAES,EAoBxBC,UAAY,WACV,EAAKC,SAAS,CACZC,SAAS,KAtBW,EA0BxBC,SAAW,SAACC,GACVC,QAAQC,IAAI,4BAA6BF,GACzCA,EAAOG,KAA2B,UAApBH,EAAOI,SAAuB,EAAI,EAChDC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUR,IACjD,EAAKL,QAAUc,YAAW,WACxBC,IAAQC,QAAQ,4BAChB,EAAKjB,MAAMkB,QAAQC,KAAK,OACvB,MA/BH,EAAKC,MAAQ,CACXhB,SAAS,GAHW,E,gEAQtBiB,IAAaC,KAAK,CAChBN,QAAS,uDACTO,SAAU,IACVC,YAAa,uC,6CAKfH,IAAaI,UACbC,KAAKzB,SAAW0B,aAAaD,KAAKzB,W,+BAoBlC,OACE,kBAAC,IAAD,CAAQ2B,UAAU,qBAChB,yBAAKA,UAAU,aACb,0EACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,KAAK,eACLD,UAAU,aACVE,cAAe,CACbC,UAAU,GAEZ1B,SAAUqB,KAAKrB,UACf,kBAAC,IAAK2B,KAAN,CACEH,KAAK,WACLI,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,iCAGb,kBAAC,IAAD,CAAOmB,OAAQ,kBAAC,IAAD,CAAcP,UAAU,wBAA0BQ,YAAY,cAE/E,kBAAC,IAAKJ,KAAN,CACEH,KAAK,WACLI,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,iCAGb,kBAAC,IAAD,CACEmB,OAAQ,kBAAC,IAAD,CAAcP,UAAU,wBAChCS,KAAK,WACLD,YAAY,cAGhB,kBAAC,IAAKJ,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAWH,KAAK,WAAWS,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,qBAEF,uBAAGX,UAAU,oBAAoBY,KAAK,IAAtC,oBAIF,kBAAC,IAAKR,KAAN,KACE,kBAAC,IAAD,CAAQK,KAAK,UAAUI,SAAS,SAASb,UAAU,qBAAnD,UADF,MAIK,uBAAGY,KAAK,IAAR,yB,GA9FGE,cAuGLC,sBAAW5C","file":"static/js/login.57d90300.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Layout, Input, Form, Button, Checkbox, Divider, message, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { withRouter } from \"react-router-dom\";\nimport '../../style/view/login.scss'\n\ntype LoginProps = {\n  match: any,\n  location: any,\n  history: any\n};\n\ntype LoginState = {\n  loading: boolean;\n};\n\nclass Login extends Component<LoginProps, LoginState> {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  timerId: any = 0;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    notification.open({\n      message: 'react-ant-admin üëèüëèüëè',\n      duration: 1000,\n      description: '{username: admin, password: any}'\n    })\n  }\n\n  componentWillUnmount() {\n    notification.destroy();\n    this.timerId && clearTimeout(this.timerId);\n  }\n\n  doLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onFinish = (values: any) => {\n    console.log('Received values of form: ', values);\n    values.auth = values.username === 'admin' ? 0 : 1;\n    localStorage.setItem('loginInfo', JSON.stringify(values));\n    this.timerId = setTimeout(() => {\n      message.success('ÁôªÂΩïÊàêÂäü');\n      this.props.history.push('/');\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <Layout className=\"page-login fadeIn\">\n        <div className=\"login-box\">\n          <h3>‰∏≠ÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªü</h3>\n          <Divider />\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={this.onFinish}>\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Username!',\n                },\n              ]}>\n              <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your Password!',\n                },\n              ]}>\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n              <a className=\"login-form-forgot\" href=\"\">\n                Forgot password\n              </a>\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n              </Button>\n              Or <a href=\"\">register now!</a>\n            </Form.Item>\n          </Form>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default withRouter(Login);"],"sourceRoot":""}